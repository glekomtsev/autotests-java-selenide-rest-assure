"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"Verify that the GET /users/{id} endpoint returns the correct user details.","54","Single User [1] 1, George, Bluth","","Tue Feb 25 13:16:05 GMT 2025","passed","Tue Feb 25 13:16:05 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetUserById"
"Verify that an existing user can be updated via PUT /users/{id}.","232","Update User (PUT) [3] 3, Eva, cook","","Tue Feb 25 13:16:02 GMT 2025","passed","Tue Feb 25 13:16:02 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testUpdateUser"
"Verify that the GET /users endpoint returns a list of users.","90","List Users","","Tue Feb 25 13:16:01 GMT 2025","passed","Tue Feb 25 13:16:01 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetAllUsers"
"Verify that an existing user can be updated via PUT /users/{id}.","231","Update User (PUT) [1] 1, Ivan, dancer","","Tue Feb 25 13:16:01 GMT 2025","passed","Tue Feb 25 13:16:02 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testUpdateUser"
"","6230","positivePracticeFormTest()","","Tue Feb 25 13:15:47 GMT 2025","failed","Tue Feb 25 13:15:53 GMT 2025","","demoqa.tests.PracticeFormTest","demoqa.tests.PracticeFormTest","positivePracticeFormTest"
"Verify that a new user can register successfully via POST /register.","209","Register Successful [1] eve.holt@reqres.in, pistol","","Tue Feb 25 13:16:02 GMT 2025","passed","Tue Feb 25 13:16:02 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testRegisterUser"
"Verify that an existing user can be updated via PATCH /users/{id}.","224","Update User (PATCH) [2] 2, Janet, president","","Tue Feb 25 13:16:03 GMT 2025","passed","Tue Feb 25 13:16:03 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testPatchUser"
"Verify that a new user can be created via POST /users.","195","Create User [2] Janet, dancer","","Tue Feb 25 13:16:04 GMT 2025","passed","Tue Feb 25 13:16:04 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testCreateUser"
"","1301","deletePosts()","","Tue Feb 25 13:15:58 GMT 2025","passed","Tue Feb 25 13:15:59 GMT 2025","","jsonplaceholder.JsonplaceholderApiTest","jsonplaceholder.JsonplaceholderApiTest","deletePosts"
"Verify that a non-existent resource returns a 404 status code.","217","Single Resource Not Found","","Tue Feb 25 13:16:01 GMT 2025","passed","Tue Feb 25 13:16:01 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testResourceNotFound"
"Verify that a non-existent user returns a 404 status code.","184","Single User Not Found","","Tue Feb 25 13:16:08 GMT 2025","passed","Tue Feb 25 13:16:08 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testUserNotFound"
"Verify that an existing user can be updated via PATCH /users/{id}.","214","Update User (PATCH) [3] 3, Emma, cook","","Tue Feb 25 13:16:03 GMT 2025","passed","Tue Feb 25 13:16:03 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testPatchUser"
"Verify that the GET /users/{id} endpoint returns the correct user details.","61","Single User [3] 3, Emma, Wong","","Tue Feb 25 13:16:05 GMT 2025","passed","Tue Feb 25 13:16:05 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetUserById"
"","52","getPosts()","","Tue Feb 25 13:16:00 GMT 2025","passed","Tue Feb 25 13:16:00 GMT 2025","","jsonplaceholder.JsonplaceholderApiTest","jsonplaceholder.JsonplaceholderApiTest","getPosts"
"Verify that a user can log in successfully via POST /login.","205","Login Successful [1] eve.holt@reqres.in, cityslicka","","Tue Feb 25 13:16:01 GMT 2025","passed","Tue Feb 25 13:16:01 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testLoginUser"
"Verify that a new user can be created via POST /users.","210","Create User [1] George, leader","","Tue Feb 25 13:16:03 GMT 2025","passed","Tue Feb 25 13:16:04 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testCreateUser"
"Verify that the GET /unknown endpoint returns a list of resources.","80","List Resources","","Tue Feb 25 13:16:03 GMT 2025","passed","Tue Feb 25 13:16:03 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetAllResources"
"Verify that registration fails when required fields are missing via POST /register.","934","Register Unsuccessful [1] qwerty","","Tue Feb 25 13:16:00 GMT 2025","passed","Tue Feb 25 13:16:01 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testRegisterUnsuccessfulUser"
"Verify that the GET /unknown/{id} endpoint returns the correct resource details.","205","Single Resource [1] 1, cerulean","","Tue Feb 25 13:16:04 GMT 2025","passed","Tue Feb 25 13:16:04 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetResourceById"
"Verify that the GET /users/{id} endpoint returns the correct user details.","73","Single User [2] 2, Janet, Weaver","","Tue Feb 25 13:16:05 GMT 2025","passed","Tue Feb 25 13:16:05 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetUserById"
"Verify that an existing user can be updated via PUT /users/{id}.","227","Update User (PUT) [2] 2, Oleg, president","","Tue Feb 25 13:16:02 GMT 2025","passed","Tue Feb 25 13:16:02 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testUpdateUser"
"Verify that a new user can be created via POST /users.","209","Create User [3] Emma, musician","","Tue Feb 25 13:16:04 GMT 2025","passed","Tue Feb 25 13:16:04 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testCreateUser"
"Verify that the GET /unknown/{id} endpoint returns the correct resource details.","200","Single Resource [3] 3, true red","","Tue Feb 25 13:16:04 GMT 2025","passed","Tue Feb 25 13:16:05 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetResourceById"
"Verify that a user can be deleted via DELETE /users/{id}.","176","Delete User","","Tue Feb 25 13:16:04 GMT 2025","passed","Tue Feb 25 13:16:04 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testDeleteUser"
"","44","getAllPosts()","","Tue Feb 25 13:16:00 GMT 2025","passed","Tue Feb 25 13:16:00 GMT 2025","","jsonplaceholder.JsonplaceholderApiTest","jsonplaceholder.JsonplaceholderApiTest","getAllPosts"
"Verify that the GET /unknown/{id} endpoint returns the correct resource details.","46","Single Resource [2] 2, fuchsia rose","","Tue Feb 25 13:16:04 GMT 2025","passed","Tue Feb 25 13:16:04 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetResourceById"
"Verify that login fails when required fields are missing via POST /login.","200","Login Unsuccessful [1] peter@klaven","","Tue Feb 25 13:16:02 GMT 2025","passed","Tue Feb 25 13:16:03 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testLoginUnsuccessfulUser"
"","76","createPosts()","","Tue Feb 25 13:16:00 GMT 2025","passed","Tue Feb 25 13:16:00 GMT 2025","","jsonplaceholder.JsonplaceholderApiTest","jsonplaceholder.JsonplaceholderApiTest","createPosts"
"","79","patchPosts()","","Tue Feb 25 13:16:00 GMT 2025","passed","Tue Feb 25 13:16:00 GMT 2025","","jsonplaceholder.JsonplaceholderApiTest","jsonplaceholder.JsonplaceholderApiTest","patchPosts"
"Verify that an existing user can be updated via PATCH /users/{id}.","235","Update User (PATCH) [1] 1, George, dancer","","Tue Feb 25 13:16:03 GMT 2025","passed","Tue Feb 25 13:16:03 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testPatchUser"
"Verify that the GET /users endpoint with delay parameter returns a delayed response.","3198","Delayed Response","","Tue Feb 25 13:16:05 GMT 2025","passed","Tue Feb 25 13:16:08 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testDelayedResponse"
"","4434","positiveTextBoxTest()","","Tue Feb 25 13:15:53 GMT 2025","failed","Tue Feb 25 13:15:58 GMT 2025","","demoqa.tests.TextBoxTest","demoqa.tests.TextBoxTest","positiveTextBoxTest"
"","149","updatePosts()","","Tue Feb 25 13:15:59 GMT 2025","passed","Tue Feb 25 13:16:00 GMT 2025","","jsonplaceholder.JsonplaceholderApiTest","jsonplaceholder.JsonplaceholderApiTest","updatePosts"
