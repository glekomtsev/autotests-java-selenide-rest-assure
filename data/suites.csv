"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"Verify that an existing user can be updated via PATCH /users/{id}.","318","Update User (PATCH) [2] 2, Janet, president","","Tue Apr 08 14:47:31 GMT 2025","passed","Tue Apr 08 14:47:31 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testPatchUser"
"Verify that the GET /unknown/{id} endpoint returns the correct resource details.","304","Single Resource [1] 1, cerulean","","Tue Apr 08 14:47:33 GMT 2025","passed","Tue Apr 08 14:47:34 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetResourceById"
"Verify that a new user can be created via POST /users.","329","Create User [3] Emma, musician","","Tue Apr 08 14:47:33 GMT 2025","passed","Tue Apr 08 14:47:33 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testCreateUser"
"","81","updatePosts()","","Tue Apr 08 14:47:26 GMT 2025","broken","Tue Apr 08 14:47:26 GMT 2025","","jsonplaceholder.tests.PostsTest","jsonplaceholder.tests.PostsTest","updatePosts"
"Verify that a non-existent resource returns a 404 status code.","343","Single Resource Not Found","","Tue Apr 08 14:47:28 GMT 2025","passed","Tue Apr 08 14:47:29 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testResourceNotFound"
"Verify that an existing user can be updated via PATCH /users/{id}.","311","Update User (PATCH) [1] 1, George, dancer","","Tue Apr 08 14:47:31 GMT 2025","passed","Tue Apr 08 14:47:31 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testPatchUser"
"Verify that an existing user can be updated via PUT /users/{id}.","321","Update User (PUT) [3] 3, Eva, cook","","Tue Apr 08 14:47:30 GMT 2025","passed","Tue Apr 08 14:47:30 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testUpdateUser"
"Verify that a non-existent user returns a 404 status code.","288","Single User Not Found","","Tue Apr 08 14:47:38 GMT 2025","passed","Tue Apr 08 14:47:38 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testUserNotFound"
"Verify that an existing user can be updated via PUT /users/{id}.","322","Update User (PUT) [2] 2, Oleg, president","","Tue Apr 08 14:47:29 GMT 2025","passed","Tue Apr 08 14:47:30 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testUpdateUser"
"Verify that a user can be deleted via DELETE /users/{id}.","298","Delete User","","Tue Apr 08 14:47:33 GMT 2025","passed","Tue Apr 08 14:47:33 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testDeleteUser"
"Verify that the GET /unknown/{id} endpoint returns the correct resource details.","295","Single Resource [3] 3, true red","","Tue Apr 08 14:47:34 GMT 2025","passed","Tue Apr 08 14:47:34 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetResourceById"
"Verify that the GET /unknown endpoint returns a list of resources.","351","List Resources","","Tue Apr 08 14:47:32 GMT 2025","passed","Tue Apr 08 14:47:32 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetAllResources"
"Verify that an existing user can be updated via PATCH /users/{id}.","304","Update User (PATCH) [3] 3, Emma, cook","","Tue Apr 08 14:47:31 GMT 2025","passed","Tue Apr 08 14:47:32 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testPatchUser"
"Verify that the GET /users/{id} endpoint returns the correct user details.","106","Single User [2] 2, Janet, Weaver","","Tue Apr 08 14:47:34 GMT 2025","passed","Tue Apr 08 14:47:34 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetUserById"
"Verify that the GET /users endpoint returns a list of users.","144","List Users","","Tue Apr 08 14:47:29 GMT 2025","passed","Tue Apr 08 14:47:29 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetAllUsers"
"Verify that a new user can register successfully via POST /register.","321","Register Successful [1] eve.holt@reqres.in, pistol","","Tue Apr 08 14:47:30 GMT 2025","passed","Tue Apr 08 14:47:30 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testRegisterUser"
"Verify that the GET /users/{id} endpoint returns the correct user details.","303","Single User [3] 3, Emma, Wong","","Tue Apr 08 14:47:34 GMT 2025","passed","Tue Apr 08 14:47:35 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetUserById"
"Verify that the GET /unknown/{id} endpoint returns the correct resource details.","310","Single Resource [2] 2, fuchsia rose","","Tue Apr 08 14:47:34 GMT 2025","passed","Tue Apr 08 14:47:34 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetResourceById"
"","3169","positiveTextBoxTest()","","Tue Apr 08 14:47:21 GMT 2025","passed","Tue Apr 08 14:47:24 GMT 2025","","demoqa.tests.TextBoxTest","demoqa.tests.TextBoxTest","positiveTextBoxTest"
"Verify that a new user can be created via POST /users.","317","Create User [1] George, leader","","Tue Apr 08 14:47:32 GMT 2025","passed","Tue Apr 08 14:47:32 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testCreateUser"
"Verify that login fails when required fields are missing via POST /login.","314","Login Unsuccessful [1] peter@klaven","","Tue Apr 08 14:47:30 GMT 2025","passed","Tue Apr 08 14:47:31 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testLoginUnsuccessfulUser"
"Verify that a new user can be created via POST /users.","302","Create User [2] Janet, dancer","","Tue Apr 08 14:47:32 GMT 2025","passed","Tue Apr 08 14:47:33 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testCreateUser"
"","2017","deletePosts()","","Tue Apr 08 14:47:24 GMT 2025","passed","Tue Apr 08 14:47:26 GMT 2025","","jsonplaceholder.tests.PostsTest","jsonplaceholder.tests.PostsTest","deletePosts"
"Verify that a user can log in successfully via POST /login.","326","Login Successful [1] eve.holt@reqres.in, cityslicka","","Tue Apr 08 14:47:29 GMT 2025","passed","Tue Apr 08 14:47:29 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testLoginUser"
"Verify that the GET /users/{id} endpoint returns the correct user details.","98","Single User [1] 1, George, Bluth","","Tue Apr 08 14:47:34 GMT 2025","passed","Tue Apr 08 14:47:34 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetUserById"
"","4","getAllPosts()","","Tue Apr 08 14:47:27 GMT 2025","passed","Tue Apr 08 14:47:27 GMT 2025","","jsonplaceholder.tests.PostsTest","jsonplaceholder.tests.PostsTest","getAllPosts"
"Verify that registration fails when required fields are missing via POST /register.","1311","Register Unsuccessful [1] qwerty","","Tue Apr 08 14:47:27 GMT 2025","passed","Tue Apr 08 14:47:28 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testRegisterUnsuccessfulUser"
"Verify that the GET /users endpoint with delay parameter returns a delayed response.","3290","Delayed Response","","Tue Apr 08 14:47:35 GMT 2025","passed","Tue Apr 08 14:47:38 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testDelayedResponse"
"","6","createPosts()","","Tue Apr 08 14:47:26 GMT 2025","broken","Tue Apr 08 14:47:27 GMT 2025","","jsonplaceholder.tests.PostsTest","jsonplaceholder.tests.PostsTest","createPosts"
"","7342","positivePracticeFormTest()","","Tue Apr 08 14:47:13 GMT 2025","passed","Tue Apr 08 14:47:20 GMT 2025","","demoqa.tests.PracticeFormTest","demoqa.tests.PracticeFormTest","positivePracticeFormTest"
"","248","getPost()","","Tue Apr 08 14:47:27 GMT 2025","broken","Tue Apr 08 14:47:27 GMT 2025","","jsonplaceholder.tests.PostsTest","jsonplaceholder.tests.PostsTest","getPost"
"Verify that an existing user can be updated via PUT /users/{id}.","335","Update User (PUT) [1] 1, Ivan, dancer","","Tue Apr 08 14:47:29 GMT 2025","passed","Tue Apr 08 14:47:29 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testUpdateUser"
