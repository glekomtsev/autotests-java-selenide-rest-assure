"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"Verify that an existing user can be updated via PUT /users/{id}.","233","8. Update User (PUT) [3] 3, Eva, cook","","Mon Feb 17 17:40:39 GMT 2025","passed","Mon Feb 17 17:40:39 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testUpdateUser"
"Verify that an existing user can be updated via PUT /users/{id}.","243","8. Update User (PUT) [2] 2, Oleg, president","","Mon Feb 17 17:40:38 GMT 2025","passed","Mon Feb 17 17:40:39 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testUpdateUser"
"Verify that a new user can be created via POST /users.","225","7. Create User [2] Janet, dancer","","Mon Feb 17 17:40:40 GMT 2025","passed","Mon Feb 17 17:40:40 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testCreateUser"
"Verify that an existing user can be updated via PATCH /users/{id}.","243","9. Update User (PATCH) [3] 3, Emma, cook","","Mon Feb 17 17:40:40 GMT 2025","passed","Mon Feb 17 17:40:40 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testPatchUser"
"Verify that the GET /users/{id} endpoint returns the correct user details.","76","2. Single User [3] 3, Emma, Wong","","Mon Feb 17 17:40:41 GMT 2025","passed","Mon Feb 17 17:40:41 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testGetUserById"
"Verify that a non-existent user returns a 404 status code.","64","3. Single User Not Found","","Mon Feb 17 17:40:45 GMT 2025","passed","Mon Feb 17 17:40:45 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testUserNotFound"
"Verify that the GET /unknown/{id} endpoint returns the correct resource details.","61","5. Single Resource [2] 2, fuchsia rose","","Mon Feb 17 17:40:41 GMT 2025","passed","Mon Feb 17 17:40:41 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testGetResourceById"
"Verify that a new user can be created via POST /users.","217","7. Create User [1] George, leader","","Mon Feb 17 17:40:40 GMT 2025","passed","Mon Feb 17 17:40:40 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testCreateUser"
"Verify that the GET /unknown/{id} endpoint returns the correct resource details.","64","5. Single Resource [1] 1, cerulean","","Mon Feb 17 17:40:41 GMT 2025","passed","Mon Feb 17 17:40:41 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testGetResourceById"
"Verify that login fails when required fields are missing via POST /login.","209","14. Login Unsuccessful [1] peter@klaven","","Mon Feb 17 17:40:39 GMT 2025","passed","Mon Feb 17 17:40:39 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testLoginUnsuccessfulUser"
"Verify that an existing user can be updated via PATCH /users/{id}.","226","9. Update User (PATCH) [1] 1, George, dancer","","Mon Feb 17 17:40:39 GMT 2025","passed","Mon Feb 17 17:40:39 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testPatchUser"
"Verify that a user can log in successfully via POST /login.","232","13. Login Successful [1] eve.holt@reqres.in, cityslicka","","Mon Feb 17 17:40:38 GMT 2025","passed","Mon Feb 17 17:40:38 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testLoginUser"
"","11434","positivePracticeFormTest()","","Mon Feb 17 17:40:16 GMT 2025","failed","Mon Feb 17 17:40:27 GMT 2025","","demoqa.tests.PracticeFormTest","demoqa.tests.PracticeFormTest","positivePracticeFormTest"
"Verify that the GET /unknown endpoint returns a list of resources.","106","4. List Resources","","Mon Feb 17 17:40:40 GMT 2025","passed","Mon Feb 17 17:40:40 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testGetAllResources"
"Verify that a new user can be created via POST /users.","231","7. Create User [3] Emma, musician","","Mon Feb 17 17:40:40 GMT 2025","passed","Mon Feb 17 17:40:41 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testCreateUser"
"Verify that a non-existent resource returns a 404 status code.","88","6. Single Resource Not Found","","Mon Feb 17 17:40:38 GMT 2025","passed","Mon Feb 17 17:40:38 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testResourceNotFound"
"Verify that the GET /users/{id} endpoint returns the correct user details.","86","2. Single User [2] 2, Janet, Weaver","","Mon Feb 17 17:40:41 GMT 2025","passed","Mon Feb 17 17:40:41 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testGetUserById"
"Verify that an existing user can be updated via PATCH /users/{id}.","220","9. Update User (PATCH) [2] 2, Janet, president","","Mon Feb 17 17:40:39 GMT 2025","passed","Mon Feb 17 17:40:40 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testPatchUser"
"Verify that the GET /users/{id} endpoint returns the correct user details.","87","2. Single User [1] 1, George, Bluth","","Mon Feb 17 17:40:41 GMT 2025","passed","Mon Feb 17 17:40:41 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testGetUserById"
"Verify that registration fails when required fields are missing via POST /register.","1935","12. Register Unsuccessful [1] qwerty","","Mon Feb 17 17:40:36 GMT 2025","passed","Mon Feb 17 17:40:38 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testRegisterUnsuccessfulUser"
"Verify that the GET /unknown/{id} endpoint returns the correct resource details.","76","5. Single Resource [3] 3, true red","","Mon Feb 17 17:40:41 GMT 2025","passed","Mon Feb 17 17:40:41 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testGetResourceById"
"Verify that the GET /users endpoint with delay parameter returns a delayed response.","3200","15. Delayed Response","","Mon Feb 17 17:40:41 GMT 2025","passed","Mon Feb 17 17:40:45 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testDelayedResponse"
"Verify that a new user can register successfully via POST /register.","226","11. Register Successful [1] eve.holt@reqres.in, pistol","","Mon Feb 17 17:40:39 GMT 2025","passed","Mon Feb 17 17:40:39 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testRegisterUser"
"Verify that the GET /users endpoint returns a list of users.","116","1. List Users","","Mon Feb 17 17:40:38 GMT 2025","passed","Mon Feb 17 17:40:38 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testGetAllUsers"
"Verify that a user can be deleted via DELETE /users/{id}.","191","10. Delete User","","Mon Feb 17 17:40:41 GMT 2025","passed","Mon Feb 17 17:40:41 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testDeleteUser"
"","7702","positiveTextBoxTest()","","Mon Feb 17 17:40:27 GMT 2025","failed","Mon Feb 17 17:40:35 GMT 2025","","demoqa.tests.TextBoxTest","demoqa.tests.TextBoxTest","positiveTextBoxTest"
"Verify that an existing user can be updated via PUT /users/{id}.","247","8. Update User (PUT) [1] 1, Ivan, dancer","","Mon Feb 17 17:40:38 GMT 2025","passed","Mon Feb 17 17:40:38 GMT 2025","","reqres.tests.ApiTest","reqres.tests.ApiTest","testUpdateUser"
