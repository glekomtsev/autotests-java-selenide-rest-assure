"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"Verify that a user can be deleted via DELETE /users/{id}.","197","Delete User","","Tue Feb 25 13:25:52 GMT 2025","passed","Tue Feb 25 13:25:52 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testDeleteUser"
"","55","getPosts()","","Tue Feb 25 13:25:47 GMT 2025","passed","Tue Feb 25 13:25:47 GMT 2025","","jsonplaceholder.JsonplaceholderApiTest","jsonplaceholder.JsonplaceholderApiTest","getPosts"
"Verify that the GET /unknown/{id} endpoint returns the correct resource details.","67","Single Resource [3] 3, true red","","Tue Feb 25 13:25:52 GMT 2025","passed","Tue Feb 25 13:25:52 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetResourceById"
"","6376","positivePracticeFormTest()","","Tue Feb 25 13:25:32 GMT 2025","passed","Tue Feb 25 13:25:38 GMT 2025","","demoqa.tests.PracticeFormTest","demoqa.tests.PracticeFormTest","positivePracticeFormTest"
"Verify that the GET /users/{id} endpoint returns the correct user details.","71","Single User [1] 1, George, Bluth","","Tue Feb 25 13:25:52 GMT 2025","passed","Tue Feb 25 13:25:52 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetUserById"
"Verify that the GET /users endpoint with delay parameter returns a delayed response.","3196","Delayed Response","","Tue Feb 25 13:25:52 GMT 2025","passed","Tue Feb 25 13:25:55 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testDelayedResponse"
"Verify that the GET /unknown endpoint returns a list of resources.","77","List Resources","","Tue Feb 25 13:25:51 GMT 2025","passed","Tue Feb 25 13:25:51 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetAllResources"
"Verify that the GET /users endpoint returns a list of users.","98","List Users","","Tue Feb 25 13:25:49 GMT 2025","passed","Tue Feb 25 13:25:49 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetAllUsers"
"","1253","deletePosts()","","Tue Feb 25 13:25:46 GMT 2025","passed","Tue Feb 25 13:25:47 GMT 2025","","jsonplaceholder.JsonplaceholderApiTest","jsonplaceholder.JsonplaceholderApiTest","deletePosts"
"Verify that registration fails when required fields are missing via POST /register.","991","Register Unsuccessful [1] qwerty","","Tue Feb 25 13:25:48 GMT 2025","passed","Tue Feb 25 13:25:49 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testRegisterUnsuccessfulUser"
"Verify that an existing user can be updated via PUT /users/{id}.","219","Update User (PUT) [3] 3, Eva, cook","","Tue Feb 25 13:25:50 GMT 2025","passed","Tue Feb 25 13:25:50 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testUpdateUser"
"Verify that an existing user can be updated via PATCH /users/{id}.","209","Update User (PATCH) [2] 2, Janet, president","","Tue Feb 25 13:25:50 GMT 2025","passed","Tue Feb 25 13:25:51 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testPatchUser"
"Verify that a non-existent user returns a 404 status code.","187","Single User Not Found","","Tue Feb 25 13:25:55 GMT 2025","passed","Tue Feb 25 13:25:56 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testUserNotFound"
"","67","getAllPosts()","","Tue Feb 25 13:25:47 GMT 2025","passed","Tue Feb 25 13:25:47 GMT 2025","","jsonplaceholder.JsonplaceholderApiTest","jsonplaceholder.JsonplaceholderApiTest","getAllPosts"
"Verify that a new user can be created via POST /users.","212","Create User [1] George, leader","","Tue Feb 25 13:25:51 GMT 2025","passed","Tue Feb 25 13:25:51 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testCreateUser"
"Verify that an existing user can be updated via PATCH /users/{id}.","228","Update User (PATCH) [1] 1, George, dancer","","Tue Feb 25 13:25:50 GMT 2025","passed","Tue Feb 25 13:25:50 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testPatchUser"
"Verify that login fails when required fields are missing via POST /login.","213","Login Unsuccessful [1] peter@klaven","","Tue Feb 25 13:25:50 GMT 2025","passed","Tue Feb 25 13:25:50 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testLoginUnsuccessfulUser"
"Verify that an existing user can be updated via PATCH /users/{id}.","223","Update User (PATCH) [3] 3, Emma, cook","","Tue Feb 25 13:25:51 GMT 2025","passed","Tue Feb 25 13:25:51 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testPatchUser"
"","103","updatePosts()","","Tue Feb 25 13:25:47 GMT 2025","passed","Tue Feb 25 13:25:47 GMT 2025","","jsonplaceholder.JsonplaceholderApiTest","jsonplaceholder.JsonplaceholderApiTest","updatePosts"
"Verify that a new user can be created via POST /users.","218","Create User [3] Emma, musician","","Tue Feb 25 13:25:51 GMT 2025","passed","Tue Feb 25 13:25:52 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testCreateUser"
"Verify that the GET /users/{id} endpoint returns the correct user details.","81","Single User [3] 3, Emma, Wong","","Tue Feb 25 13:25:52 GMT 2025","passed","Tue Feb 25 13:25:52 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetUserById"
"","77","createPosts()","","Tue Feb 25 13:25:47 GMT 2025","passed","Tue Feb 25 13:25:47 GMT 2025","","jsonplaceholder.JsonplaceholderApiTest","jsonplaceholder.JsonplaceholderApiTest","createPosts"
"Verify that a non-existent resource returns a 404 status code.","235","Single Resource Not Found","","Tue Feb 25 13:25:49 GMT 2025","passed","Tue Feb 25 13:25:49 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testResourceNotFound"
"Verify that a new user can be created via POST /users.","203","Create User [2] Janet, dancer","","Tue Feb 25 13:25:51 GMT 2025","passed","Tue Feb 25 13:25:51 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testCreateUser"
"Verify that an existing user can be updated via PUT /users/{id}.","223","Update User (PUT) [2] 2, Oleg, president","","Tue Feb 25 13:25:49 GMT 2025","passed","Tue Feb 25 13:25:50 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testUpdateUser"
"Verify that the GET /users/{id} endpoint returns the correct user details.","74","Single User [2] 2, Janet, Weaver","","Tue Feb 25 13:25:52 GMT 2025","passed","Tue Feb 25 13:25:52 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetUserById"
"Verify that the GET /unknown/{id} endpoint returns the correct resource details.","61","Single Resource [2] 2, fuchsia rose","","Tue Feb 25 13:25:52 GMT 2025","passed","Tue Feb 25 13:25:52 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetResourceById"
"","95","patchPosts()","","Tue Feb 25 13:25:47 GMT 2025","passed","Tue Feb 25 13:25:47 GMT 2025","","jsonplaceholder.JsonplaceholderApiTest","jsonplaceholder.JsonplaceholderApiTest","patchPosts"
"Verify that the GET /unknown/{id} endpoint returns the correct resource details.","63","Single Resource [1] 1, cerulean","","Tue Feb 25 13:25:52 GMT 2025","passed","Tue Feb 25 13:25:52 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testGetResourceById"
"Verify that a user can log in successfully via POST /login.","239","Login Successful [1] eve.holt@reqres.in, cityslicka","","Tue Feb 25 13:25:49 GMT 2025","passed","Tue Feb 25 13:25:49 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testLoginUser"
"Verify that an existing user can be updated via PUT /users/{id}.","244","Update User (PUT) [1] 1, Ivan, dancer","","Tue Feb 25 13:25:49 GMT 2025","passed","Tue Feb 25 13:25:49 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testUpdateUser"
"Verify that a new user can register successfully via POST /register.","215","Register Successful [1] eve.holt@reqres.in, pistol","","Tue Feb 25 13:25:50 GMT 2025","passed","Tue Feb 25 13:25:50 GMT 2025","","reqres.tests.ReqresApiTest","reqres.tests.ReqresApiTest","testRegisterUser"
"","6756","positiveTextBoxTest()","","Tue Feb 25 13:25:39 GMT 2025","failed","Tue Feb 25 13:25:45 GMT 2025","","demoqa.tests.TextBoxTest","demoqa.tests.TextBoxTest","positiveTextBoxTest"
